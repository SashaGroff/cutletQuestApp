//
//  Question.swift
//  cutletQuestApp
//
//  Created by Alexander on 15.01.2024.
//

struct Question {
    let title: String
    let responseType: ResponseType
    let answers: [Answer]
    
    static func getQuestions() -> [Question] {
        [
            Question(
                title: "–ö–∞–∫–æ–µ –±–ª—é–¥–æ –≤—ã –ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞–µ—Ç–µ –±–æ–ª—å—à–µ –≤—Å–µ–≥–æ?",
                responseType: .single,
                answers: [
                    Answer(title: "–°–æ—á–Ω–æ–µ –≥–æ–≤—è–∂—å–µ –º—è—Å–æ", burger: .bigBurger),
                    Answer(title: "–ù–µ–∂–Ω–∞—è —Ä—ã–±–∫–∞", burger: .fishBurger),
                    Answer(title: "–ó–¥–æ—Ä–æ–≤–∞—è —Ä–∞—Å—Ç–∏—Ç–µ–ª—å–Ω–∞—è –ø–∏—â–∞", burger: .veganBurger),
                    Answer(title: "–î–æ–º–∞—à–Ω—è—è –∂–∞—Ä–µ–Ω–Ω–∞—è –ø—Ç–∏—á–∫–∞", burger: .chickenBurger)
                ]
            ),
            
            Question(
                title: "–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à–∏ –ª—é–±–∏–º—ã–µ —Å–ø–µ—Ü–∏–∏ –∏ –ø—Ä–∏–ø—Ä–∞–≤—ã:",
                responseType: .multiple,
                answers: [
                    Answer(title: "–ö–∞—Ä–∞–º–µ–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ª—É—á–æ–∫!", burger: .bigBurger),
                    Answer(title: "–¢–∞–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–π –¢–µ—Ä–∏—è–∫–∏!", burger: .fishBurger),
                    Answer(title: "–ñ–∞—Ä–µ–Ω–Ω—ã–µ –≥—Ä–∏–±–æ—á–∫–∏!", burger: .veganBurger),
                    Answer(title: "–û–≥–Ω–µ–Ω–Ω—ã–µ —Ö–∞–ª–∞–ø–µ–Ω—å–æ!", burger: .chickenBurger)
                ]
            ),
            
            Question(
                title: "–í—ã–±–µ—Ä–∏—Ç–µ —É—Ä–æ–≤–µ–Ω—å –ø–∏–∫–∞–Ω—Ç–Ω–æ—Å—Ç–∏ (–æ—Å—Ç—Ä–æ—Ç—ã)!",
                responseType: .ranged,
                answers: [
                    Answer(title: "üî•", burger: .veganBurger),
                    Answer(title: "üî•üî•", burger: .fishBurger),
                    Answer(title: "üî•üî•üî•", burger: .bigBurger),
                    Answer(title: "üî•üî•üî•üî•", burger: .chickenBurger)
                ]
            )
        ]
    }
}

enum ResponseType {
    case single
    case multiple
    case ranged
}

struct Answer {
    let title: String
    let burger: Burger
}

enum Burger: String {
    case chickenBurger = "–ì–æ—Ä—è—á–∞—è —Ü—ã–ø–æ—á–∫–∞ (–û—Å—Ç—Ä—ã–π –∫—É—Ä–∏–Ω—ã–π –±—É—Ä–≥–µ—Ä)"
    case veganBurger = "–ó–µ–ª–µ–Ω—ã–π –ó–∞–≤–æ–µ–≤–∞—Ç–µ–ª—å (–í–µ–≥–∞–Ω—Å–∫–∏–π –ø–æ—Ä—Ç–æ–±–µ–ª–ª–æ - –±—É—Ä–≥–µ—Ä)"
    case bigBurger = "–ß–µ–º–ø–∏–æ–Ω (–ß–µ—Ä–Ω—ã–π –±—É—Ä–≥–µ—Ä)"
    case fishBurger = "–ú–æ—Ä—Å–∫–æ–π –ü–æ–±–µ–¥–∏—Ç–µ–ª—å (–ë—É—Ä–≥–µ—Ä —Å –ª–æ—Å–æ—Å–µ–º –¢–µ—Ä–∏—è–∫–∏)"
    
    var definition: String {
        switch self {
        case .chickenBurger:
            return "–ì–æ—Ä—è—á–∞—è —Ü—ã–ø–æ—á–∫–∞"
        case .veganBurger:
            return "–ó–µ–ª–µ–Ω—ã–π –ó–∞–≤–æ–µ–≤–∞—Ç–µ–ª—å"
        case .bigBurger:
            return "–ß–µ–º–ø–∏–æ–Ω"
        case .fishBurger:
            return "–ú–æ—Ä—Å–∫–æ–π –ü–æ–±–µ–¥–∏—Ç–µ–ª—å"
        }
    }
}
